#
# Copyright 2015-2017 EntIT Software LLC, a Micro Focus company.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# swagger configuration file

# values in the swagger hash are system configuration for swagger-node
swagger:

  fittingsDirs: [ api/fittings ]
  defaultPipe: null
  swaggerControllerPipe: swagger_controllers  # defines the standard processing pipe for controllers

  # values defined in the bagpipes key are the bagpipes pipes and fittings definitions
  # (see https://github.com/apigee-127/bagpipes)
  bagpipes:
    # fitting to handle numbers exceeding JavaScript number size up to 64-bits.
    _handle64BitNumbers:
      name: handle64BitNumbers
      type: user

    _router:
      name: swagger_router
      mockMode: false
      mockControllersDirs: [ api/mocks ]
      controllersDirs: [ api/controllers ]

    _swagger_validate:
      name: swagger_validator
      # disabled due to issues where properties set as int64 format integers in contract were losing precision when converted to JavaScript from Java long types.
      # we use a library that allows parsing of these values to/from JSON so they return in response but the swagger validation logic doesn't recognize that as a Number and marks the response as invalid against the expected schema
      validateResponse: false

    # pipe for all swagger-node controllers
    swagger_controllers:
      #- onError: json_error_handler
      - cors
      - swagger_security
      - _swagger_validate
      - express_compatibility
      # handle large numbers after parameters have been extracted and placed onto request object but before they reach the controllers
      - _handle64BitNumbers
      - _router

    # pipe to serve swagger (endpoint is in swagger.yaml)
    swagger_raw:
      name: swagger_raw

# any other values in this file are just loaded into the config for application access...
