{
  "name": "Default Workflow",
  "description": "",
  "processingRules": [{
    "name": "Metadata Processing",
    "description": "Extracts document metadata.",
    "priority": 100,
    "actions": [{
      "name": "BinaryHash",
      "description": "Returns a SHA-1 digest of the input file.",
      "order": 100,
      "settings": {
      },
      "typeName": "BinaryHashPolicyType",
      "actionConditions": [{
        "name": "No Hash",
        "additional": {
          "type": "not",
          "condition": {
            "name": "BINARY_HASH_SHA1 exists",
            "additional": {
              "type": "exists",
              "field": "BINARY_HASH_SHA1"
            }
          }
        }
      }]
    },
      {
        "name": "OCR",
        "description": "Extract Text from Images.",
        "order": 300,
        "settings": {
        },
        "typeName": "OCRWorkerHandler",
        "actionConditions": [{
          "name": "Image",
          "additional": {
            "type": "boolean",
            "operator": "or",
            "children": [{
              "name": "Raster Image",
              "additional": {
                "type": "string",
                "notes": "DOC_CLASS_CODE is 4",
                "operator": "is",
                "field": "DOC_CLASS_CODE",
                "value": "4"
              }
            },
              {
                "name": "fax",
                "additional": {
                  "type": "string",
                  "operator": "is",
                  "field": "DOC_CLASS_CODE",
                  "notes": "DOC_CLASS_CODE is 19:fax",
                  "value": "19"
                }
              },
              {
                "name": "pdf",
                "additional": {
                  "type": "string",
                  "value": "230",
                  "operator": "is",
                  "field": "DOC_FORMAT_CODE",
                  "notes": "DOC_FORMAT_CODE is 230"
                }
              },
              {
                "name": "Vector Graphic",
                "additional": {
                  "type": "string",
                  "value": "5",
                  "operator": "is",
                  "field": "DOC_CLASS_CODE",
                  "notes": "DOC_CLASS_CODE is 5"
                }
              }
            ]
          }
        }]
      },
      {
        "name": "Speech",
        "description": "Extract Text from Audio or Video files.",
        "order": 400,
        "settings": {
        },
        "typeName": "SpeechWorkerHandler",
        "actionConditions": [{
          "name": "Audio/Video",
          "additional": {
            "type": "boolean",
            "operator": "or",
            "children": [{
              "name": "Sound",
              "additional": {
                "type": "string",
                "value": "9",
                "operator": "is",
                "field": "DOC_CLASS_CODE",
                "notes": "DOC_CLASS_CODE is 9"
              }
            },
              {
                "name": "Movie",
                "additional": {
                  "type": "string",
                  "value": "20",
                  "operator": "is",
                  "field": "DOC_CLASS_CODE",
                  "notes": "DOC_CLASS_CODE is 20"
                }
              }
            ]
          }
        }]
      },
      {
        "name": "Markup",
        "description": "Markup documents.",
        "order": 500,
        "settings": {
          "fields": [
            "BINARY_HASH_SHA1",
            "CHILD_INFO_*_BINARY_HASH_SHA1",
            "CONTENT",
            "CONVERSATION_INDEX",
            "CONVERSATION_TOPIC",
            "IN_REPLY_TO",
            "IS_FAMILY_TYPE",
            "MESSAGE_ID",
            "PARENT_COMPARISON_HASH",
            "SECTION_ID",
            "THREAD_ID",
            "caf-mail-conversation-index",
            "caf-mail-in-reply-to",
            "cc",
            "conversationtopic",
            "creationtime",
            "from",
            "in-reply-to",
            "internetmessageid",
            "lastmodificationtime",
            "message-id",
            "priority",
            "received",
            "sender",
            "sensitivity",
            "sent",
            "subject",
            "thread-index",
            "thread-topic",
            "to"
          ],
          "workerName": "markupworkerhandler",
          "customData": {
          }
        },
        "typeName": "DocumentWorkerHandler",
        "actionConditions": []
      },
      {
        "name": "LangDetect",
        "description": "Detects top 3 languages in an uploaded document.",
        "order": 800,
        "settings": {
          "workerName": "langdetectworker",
          "fields": ["CONTENT"]
        },
        "typeName": "DocumentWorkerHandler",
        "actionConditions": [{
          "name": "CONTENTexists",
          "additional": {
            "type": "exists",
            "field": "CONTENT",
            "notes": "CONTENT exists: CONTENTexists"
          }
        }]
      },
      {
        "name": "EntityExtract",
        "description": "Detects PII in an uploaded document.",
        "order": 900,
        "settings": {
          "workerName": "entityextractworkerhandler",
          "fields": ["CONTENT"],
          "customData": {
            "OPERATION_MODE": "DETECT",
            "GRAMMAR_MAP": "{pii.xml: []}"
          }
        },
        "typeName": "DocumentWorkerHandler",
        "actionConditions": [{
          "name": "CONTENTexists",
          "additional": {
            "type": "exists",
            "field": "CONTENT"
          }
        }]
      },
      {
        "name": "Boilerplate",
        "description": "Detects Expressions in an uploaded document.",
        "order": 1000,
        "settings": {
          "redactionType": "DO_NOTHING",
          "expressionIds": [
            "HP old",
            "Generic Disclaimer",
            "HPE short",
            "HPE long",
            "HP",
            "Hewlett Packard",
            "HPE Disclaimer"
          ],
          "returnMatches": true
        },
        "typeName": "BoilerplatePolicyType",
        "actionConditions": [{
          "name": "CONTENTexists",
          "additional": {
            "type": "exists",
            "field": "CONTENT",
            "notes": "CONTENT exists: CONTENTexists"
          }
        }]
      }
    ],
    "ruleConditions": [
    ]
  },
    {
      "name": "Classify",
      "description": "Classify processed document.",
      "priority": 200,
      "actions": [{
        "name": "External Classification",
        "description": "Perform external classification on document.",
        "order": 100,
        "settings": {
          "workflowId": "Classification Workflow"
        },
        "typeName": "ElasticSearchClassificationPolicyType",
        "actionConditions": [
        ]
      }],
      "ruleConditions": [
      ]
    },
    {
      "name": "Output",
      "description": "Output processed document.",
      "priority": 300,
      "actions": [
        {
          "name": "Field Mapping StorageReference",
          "description": "Rename Metadata Fields of Parent Document.",
          "order": 90,
          "settings": {
            "mappings": {
              "storageReference": "ARCHIVE_ID"
            }
          },
          "typeName": "FieldMappingPolicyType",
          "actionConditions": []
        },{
          "name": "Send to Output Queue",
          "description": "Send to Data Processing Output Queue.",
          "order": 100,
          "settings": {
            "workerName": "worker-indexelastic",
            "queueName": "worker-indexelastic-in"
          },
          "typeName": "DocumentWorkerHandler",
          "actionConditions": [
          ]
        }],
      "ruleConditions": [
      ]
    }
  ]
}
